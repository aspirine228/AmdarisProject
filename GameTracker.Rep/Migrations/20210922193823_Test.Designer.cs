// <auto-generated />
using System;
using GameTracker.Rep;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameTracker.Rep.Migrations
{
    [DbContext(typeof(MyGameDbContext))]
    [Migration("20210922193823_Test")]
    partial class Test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameTracker.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("GameTracker.Domain.Entities.CompanyContract", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("ContractEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ContractStart")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CompanyContract");
                });

            modelBuilder.Entity("GameTracker.Domain.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("GamerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimePlayed")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("GamerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameTracker.Domain.Entities.GameStat", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scenario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Try1")
                        .HasColumnType("int");

                    b.Property<int>("Try2")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GameStat");
                });

            modelBuilder.Entity("GameTracker.Domain.Entities.Gamer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wallet")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Gamers");
                });

            modelBuilder.Entity("GameTracker.Domain.Entities.CompanyContract", b =>
                {
                    b.HasOne("GameTracker.Domain.Entities.Company", "Company")
                        .WithOne("CompanyContract")
                        .HasForeignKey("GameTracker.Domain.Entities.CompanyContract", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("GameTracker.Domain.Entities.Game", b =>
                {
                    b.HasOne("GameTracker.Domain.Entities.Company", "Company")
                        .WithMany("Games")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameTracker.Domain.Entities.Gamer", "Gamer")
                        .WithMany("Games")
                        .HasForeignKey("GamerId");

                    b.Navigation("Company");

                    b.Navigation("Gamer");
                });

            modelBuilder.Entity("GameTracker.Domain.Entities.GameStat", b =>
                {
                    b.HasOne("GameTracker.Domain.Entities.Game", "Game")
                        .WithOne("Stat")
                        .HasForeignKey("GameTracker.Domain.Entities.GameStat", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameTracker.Domain.Entities.Company", b =>
                {
                    b.Navigation("CompanyContract");

                    b.Navigation("Games");
                });

            modelBuilder.Entity("GameTracker.Domain.Entities.Game", b =>
                {
                    b.Navigation("Stat");
                });

            modelBuilder.Entity("GameTracker.Domain.Entities.Gamer", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
